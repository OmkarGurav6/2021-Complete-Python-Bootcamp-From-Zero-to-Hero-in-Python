
lxml is a Python library which allows for easy handling of XML and HTML files, and can also be used for web scraping.

Beautiful Soup is a library that makes it easy to scrape information from web pages. 
It sits atop an HTML or XML parser, providing Pythonic idioms for iterating, searching, and modifying the parse tree.

eg :

res = requests.get("http://www.example.com")
soup = bs4.BeautifulSoup(res.text,"lxml")
soup

<!DOCTYPE html>
<html>
<head>
<title>Example Domain</title>
<meta charset="utf-8"/>
<meta content="text/html; charset=utf-8" http-equiv="Content-type"/>
<meta content="width=device-width, initial-scale=1" name="viewport"/>
<style type="text/css">
    body {
        background-color: #f0f0f2;
        margin: 0;
        padding: 0;
        font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
        
    }
    div {
        width: 600px;
        margin: 5em auto;
        padding: 2em;
        background-color: #fdfdff;
        border-radius: 0.5em;
        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);
    }
    a:link, a:visited {
        color: #38488f;
        text-decoration: none;
    }
    @media (max-width: 700px) {
        div {
            margin: 0 auto;
            width: auto;
        }
    }
    </style>
</head>
<body>
<div>
<h1>Example Domain</h1>
<p>This domain is for use in illustrative examples in documents. You may use this
    domain in literature without prior coordination or asking for permission.</p>
<p><a href="https://www.iana.org/domains/example">More information...</a></p>
</div>
</body>
</html>

soup.select('title')[0].text
'Example Domain'

soup.select returns list.

Syntax to pass to the .select() method                Match Results

soup.select('div')                                    All elements with the <div> tag

soup.select('#some_id')                               The HTML element containing the id attribute of some_id

soup.select('.notice')                                All the HTML elements with the CSS class named notice

soup.select('div span')                               Any elements named <span> that are within an element named <div>

soup.select('div > span')                             Any elements named <span> that are directly within an element named <div>, 
                                                      with no other element in between












